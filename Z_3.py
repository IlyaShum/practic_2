def extended_gcd(a, b):
    #базовый случай рекурсии: если a равно 0, то НОД равен b, а коэффициенты x и y равны 0 и 1 соответственно
    if a == 0:
        return b, 0, 1
    else:
        #рекурсивный вызов функции extended_gcd для вычисления НОД(b, a % b) и коэффициентов x1 и y1
        gcd, x1, y1 = extended_gcd(b % a, a)
        #вычисление коэффициентов x и y
        x = y1 - (b // a) * x1
        y = x1
        #возвращает НОД(a, b) и коэффициенты x и y
        return gcd, x, y

def mod_inverse(c, m):
    #вызов функции extended_gcd для вычисления НОД(c, m) и коэффициентов x и y
    gcd, x, _ = extended_gcd(c, m)
    #если НОД(c, m) не равен 1, то обратного числа не существует
    if gcd != 1:
        print("Обратное число не существует!")
        return -1
    #возвращаем положительный остаток от деления x на m
    return (x % m + m) % m

def main():
    #ввод числа c с клавиатуры
    c = int(input("Введите число c: "))
    #ввод модуля m с клавиатуры
    m = int(input("Введите модуль m: "))

    #вычисление взаимообратного числа d
    d = mod_inverse(c, m)
    #если d не равно -1, то выводим его
    if d != -1:
        print("Взаимообратное число d:", d)

#точка входа в программу
if __name__ == "__main__":
    main()

