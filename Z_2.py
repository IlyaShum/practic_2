def Euclid(num, modal):
    #инициализация векторов X и Y
    X = [modal, 0]
    Y = [num, 1]
    T = [0, 0]
    #вывод разделителя
    print("---------------------")
    #вывод начальных значений X и Y
    print(X[0], X[1])
    print(Y[0], Y[1])
    #алгоритм Евклида
    while Y[0] != 0:
        #вычисление целой части от деления
        q = X[0] // Y[0]
        #вычисление остатка от деления
        T[0] = X[0] % Y[0]
        #вычисление нового значения для T[1]
        T[1] = X[1] - q * Y[1]
        #вывод промежуточных результатов
        print(T[0], T[1], q)
        #обмен значений между X и Y
        X = Y
        Y = T
    #вывод разделителя
    print("---------------------")
    #возврат результата в векторе X
    return X

def main():
    #ввод числа c с клавиатуры и преобразование в целое число
    c = int(input("Введите число c: "))
    #ввод модуля m с клавиатуры и преобразование в целое число
    m = int(input("Введите модуль m: "))
    #вызов функции Euclid с переданными числом и модулем, результат сохраняется в векторе lineX
    lineX = Euclid(c, m)
    #извлечение из вектора lineX второго элемента (d)
    d = lineX[1]
    #проверка, являются ли числа взаимнопростыми (первый элемент вектора lineX равен 1)
    if lineX[0] == 1:
        #если d отрицательное, то добавляем модуль m
        if d < 0:
            d += m
        #вывод результата d
        print("d =", d)
    else:
        #если числа не взаимнопростые, то выводим сообщение об этом
        print("d не существует, так как c и m - не взаимно простые числа")

#точка входа в программу
if __name__ == "__main__":

